name: CI â€” fmt, clippy, build, test

on:
  push:
    branches: [ main, master ]
  pull_request:
    branches: [ main, master ]

env:
  CARGO_CACHE_PATH: ~/.cargo/registry
  CARGO_GIT_PATH: ~/.cargo/git
  TARGET_DIR: target

jobs:
  fmt:
    name: fmt (rustfmt)
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
      - name: Cache cargo registry
        uses: actions/cache@v4
        with:
          path: |
            ${{ env.CARGO_CACHE_PATH }}
            ${{ env.CARGO_GIT_PATH }}
          key: ${{ runner.os }}-cargo-rs-${{ hashFiles('**/Cargo.lock') }}
      - name: Setup Rust
        uses: actions-rs/toolchain@v1
        with:
          toolchain: stable
          components: rustfmt
          profile: minimal
      - name: Check formatting
        run: cargo fmt --all -- --check

  clippy:
    name: clippy (lint)
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
      - name: Cache cargo (no target)
        uses: actions/cache@v4
        with:
          path: |
            ${{ env.CARGO_CACHE_PATH }}
            ${{ env.CARGO_GIT_PATH }}
          key: ${{ runner.os }}-cargo-clippy-${{ hashFiles('**/Cargo.lock', 'envoy-data-plane-api/build.rs') }}
      - name: Install protoc
        run: sudo apt-get update && sudo apt-get install -y protobuf-compiler
      - name: Check protoc version
        run: protoc --version
      - name: Setup Rust
        uses: actions-rs/toolchain@v1
        with:
          toolchain: stable
          components: clippy
          profile: minimal
      - name: Run clippy (fail on warnings)
        run: cargo clippy --all-targets --all-features -- -D warnings

  build:
    name: build (release)
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
      - name: Cache cargo (no target)
        uses: actions/cache@v4
        with:
          path: |
            ${{ env.CARGO_CACHE_PATH }}
            ${{ env.CARGO_GIT_PATH }}
          key: ${{ runner.os }}-cargo-build-${{ hashFiles('**/Cargo.lock', 'envoy-data-plane-api/build.rs') }}
      - name: Install protoc
        run: sudo apt-get update && sudo apt-get install -y protobuf-compiler
      - name: Check protoc version
        run: protoc --version
      - name: Setup Rust
        uses: actions-rs/toolchain@v1
        with:
          toolchain: stable
          profile: minimal
      - name: Build (release)
        run: cargo build --workspace --release --locked

  test:
    name: test (depends on build)
    runs-on: ubuntu-latest
    needs: build
    steps:
      - uses: actions/checkout@v4
      - name: Cache cargo (no target)
        uses: actions/cache@v4
        with:
          path: |
            ${{ env.CARGO_CACHE_PATH }}
            ${{ env.CARGO_GIT_PATH }}
          key: ${{ runner.os }}-cargo-test-${{ hashFiles('**/Cargo.lock', 'envoy-data-plane-api/build.rs') }}
      - name: Install protoc
        run: sudo apt-get update && sudo apt-get install -y protobuf-compiler
      - name: Check protoc version
        run: protoc --version
      - name: Setup Rust
        uses: actions-rs/toolchain@v1
        with:
          toolchain: stable
          profile: minimal
      - name: Run tests
        run: cargo test --workspace --release --locked
